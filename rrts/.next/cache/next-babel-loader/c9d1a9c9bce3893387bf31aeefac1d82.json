{"ast":null,"code":"import { ActionTypes } from '../actions';\nexport const todosReducer = (state = [], action) => {\n  switch (action.type) {\n    case ActionTypes.fetchTodos:\n      return action.payload;\n\n    case ActionTypes.deleteTodo:\n      return state.filter(todo => todo.id !== action.payload);\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/ggrumbley/Workbench/TS_Lab/rrts/reducers/todos.ts"],"names":["ActionTypes","todosReducer","state","action","type","fetchTodos","payload","deleteTodo","filter","todo","id"],"mappings":"AAAA,SAAuBA,WAAvB,QAA0C,YAA1C;AAEA,OAAO,MAAMC,YAAY,GAAG,CAACC,KAAa,GAAG,EAAjB,EAAqBC,MAArB,KAAwC;AAClE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKJ,WAAW,CAACK,UAAjB;AACE,aAAOF,MAAM,CAACG,OAAd;;AACF,SAAKN,WAAW,CAACO,UAAjB;AACE,aAAOL,KAAK,CAACM,MAAN,CAAcC,IAAD,IAAgBA,IAAI,CAACC,EAAL,KAAYP,MAAM,CAACG,OAAhD,CAAP;;AACF;AACE,aAAOJ,KAAP;AANJ;AAQD,CATM","sourcesContent":["import { Todo, Action, ActionTypes } from '../actions';\n\nexport const todosReducer = (state: Todo[] = [], action: Action) => {\n  switch (action.type) {\n    case ActionTypes.fetchTodos:\n      return action.payload;\n    case ActionTypes.deleteTodo:\n      return state.filter((todo: Todo) => todo.id !== action.payload);\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}