{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/ggrumbley/Workbench/TS_Lab/rrts/components/App.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchTodos, deleteTodo } from '../actions';\n\nvar _App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(_App, _React$Component);\n\n  function _App(props) {\n    var _this;\n\n    _classCallCheck(this, _App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(_App).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onButtonClick\", function () {\n      _this.props.fetchTodos();\n\n      _this.setState({\n        fetching: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onTodoClick\", function (id) {\n      _this.props.deleteTodo(id);\n    });\n\n    _this.state = {\n      fetching: false\n    };\n    return _this;\n  }\n\n  _createClass(_App, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (!prevProps.todos.length && this.props.todos.length) {\n        this.setState({\n          fetching: false\n        });\n      }\n    }\n  }, {\n    key: \"renderList\",\n    value: function renderList() {\n      var _this2 = this;\n\n      return this.props.todos.map(function (todo) {\n        return __jsx(\"div\", {\n          onClick: function onClick() {\n            return _this2.onTodoClick(todo.id);\n          },\n          key: todo.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, todo.title);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, __jsx(\"button\", {\n        onClick: this.onButtonClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Fetch\"), this.state.fetching ? 'LOADING' : null, this.renderList());\n    }\n  }]);\n\n  return _App;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var todos = _ref.todos;\n  return {\n    todos: todos\n  };\n};\n\nexport var App = connect(mapStateToProps, {\n  fetchTodos: fetchTodos,\n  deleteTodo: deleteTodo\n})(_App);","map":{"version":3,"sources":["/Users/ggrumbley/Workbench/TS_Lab/rrts/components/App.tsx"],"names":["React","connect","fetchTodos","deleteTodo","_App","props","setState","fetching","id","state","prevProps","todos","length","map","todo","onTodoClick","title","onButtonClick","renderList","Component","mapStateToProps","App"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAeC,UAAf,EAA2BC,UAA3B,QAA6C,YAA7C;;IAaMC,I;;;;;AACJ,gBAAYC,KAAZ,EAA6B;AAAA;;AAAA;;AAC3B,8EAAMA,KAAN;;AAD2B,oEAYb,YAAY;AAC1B,YAAKA,KAAL,CAAWH,UAAX;;AACA,YAAKI,QAAL,CAAc;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACD,KAf4B;;AAAA,kEAiBf,UAACC,EAAD,EAAsB;AAClC,YAAKH,KAAL,CAAWF,UAAX,CAAsBK,EAAtB;AACD,KAnB4B;;AAG3B,UAAKC,KAAL,GAAa;AAAEF,MAAAA,QAAQ,EAAE;AAAZ,KAAb;AAH2B;AAI5B;;;;uCAEkBG,S,EAA2B;AAC5C,UAAI,CAACA,SAAS,CAACC,KAAV,CAAgBC,MAAjB,IAA2B,KAAKP,KAAL,CAAWM,KAAX,CAAiBC,MAAhD,EAAwD;AACtD,aAAKN,QAAL,CAAc;AAAEC,UAAAA,QAAQ,EAAE;AAAZ,SAAd;AACD;AACF;;;iCAW2B;AAAA;;AAC1B,aAAO,KAAKF,KAAL,CAAWM,KAAX,CAAiBE,GAAjB,CAAqB,UAACC,IAAD,EAAgB;AAC1C,eACE;AAAK,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACC,WAAL,CAAiBD,IAAI,CAACN,EAAtB,CAAN;AAAA,WAAd;AAA+C,UAAA,GAAG,EAAEM,IAAI,CAACN,EAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGM,IAAI,CAACE,KADR,CADF;AAKD,OANM,CAAP;AAOD;;;6BAEQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,OAAO,EAAE,KAAKC,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEG,KAAKR,KAAL,CAAWF,QAAX,GAAsB,SAAtB,GAAkC,IAFrC,EAGG,KAAKW,UAAL,EAHH,CADF;AAOD;;;;EAxCgBlB,KAAK,CAACmB,S;;AA2CzB,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,OAA8C;AAAA,MAA3CT,KAA2C,QAA3CA,KAA2C;AACpE,SAAO;AAAEA,IAAAA,KAAK,EAALA;AAAF,GAAP;AACD,CAFD;;AAIA,OAAO,IAAMU,GAAG,GAAGpB,OAAO,CACxBmB,eADwB,EAExB;AAAElB,EAAAA,UAAU,EAAVA,UAAF;AAAcC,EAAAA,UAAU,EAAVA;AAAd,CAFwB,CAAP,CAGjBC,IAHiB,CAAZ","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Todo, fetchTodos, deleteTodo } from '../actions';\nimport { StoreState } from '../reducers';\n\ninterface AppProps {\n  todos: Todo[];\n  fetchTodos: Function;\n  deleteTodo: typeof deleteTodo;\n}\n\ninterface AppState {\n  fetching: boolean;\n}\n\nclass _App extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = { fetching: false };\n  }\n\n  componentDidUpdate(prevProps: AppProps): void {\n    if (!prevProps.todos.length && this.props.todos.length) {\n      this.setState({ fetching: false });\n    }\n  }\n\n  onButtonClick = (): void => {\n    this.props.fetchTodos();\n    this.setState({ fetching: true });\n  };\n\n  onTodoClick = (id: number): void => {\n    this.props.deleteTodo(id);\n  };\n\n  renderList(): JSX.Element[] {\n    return this.props.todos.map((todo: Todo) => {\n      return (\n        <div onClick={() => this.onTodoClick(todo.id)} key={todo.id}>\n          {todo.title}\n        </div>\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <button onClick={this.onButtonClick}>Fetch</button>\n        {this.state.fetching ? 'LOADING' : null}\n        {this.renderList()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ todos }: StoreState): { todos: Todo[] } => {\n  return { todos };\n};\n\nexport const App = connect(\n  mapStateToProps,\n  { fetchTodos, deleteTodo }\n)(_App);\n"]},"metadata":{},"sourceType":"module"}